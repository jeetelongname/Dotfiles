#!/usr/bin/env ruby

# frozen_string_literal: true

#                     __
#    __  _____  ___  / /______
#   / / / / _ \/ _ \/ __/ ___/
#  / /_/ /  __/  __/ /_(__  )
#  \__, /\___/\___/\__/____/
# /____/
#                    _       __
#    _______________(_)___  / /_
#   / ___/ ___/ ___/ / __ \/ __/
#  (__  ) /__/ /  / / /_/ / /_
# /____/\___/_/  /_/ .___/\__/
#                 /_/
#                 for battery stuff

def low(capacity)
  puts "âš  Battery low #{capacity}"
end

def full(capacity)
  puts "ðŸ”‹ Battery full #{capacity}"
end

def discharging(capacity)
  puts "ðŸ—² Battery:#{capacity}"
end

def charging(capacity)
  puts "ðŸ”Œ Battery:#{capacity}"
end

batt = `ls /sys/class/power_supply`.scan(/BAT1/)

batt.each do |battery|
  capacity = `cat /sys/class/power_supply/#{battery}/capacity`.to_i
  status = `cat /sys/class/power_supply/#{battery}/status`.strip.to_sym
  if capacity == 100
    full(capacity)
  elsif capacity.between?(25, 99)
    if status == :Discharging
      discharging(capacity)
    else
      charging(capacity)
    end
  elsif capacity < 25 && status == :Discharging
    low(capacity)
  end
  # low(capacity)
  # charging(capacity)
  # discharging(capacity)
  # full(capacity)
end
