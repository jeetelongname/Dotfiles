#!/usr/bin/env ruby
# frozen_string_literal: true

require 'getoptlong'

opts = GetoptLong.new(
  ['--help', '-h', GetoptLong::NO_ARGUMENT],
  ['--yes', '-y', GetoptLong::NO_ARGUMENT],
  ['--dryrun', '-d', GetoptLong::NO_ARGUMENT]
)

yes = false
dryrun = false
opts.each do |opt, _arg|
  case opt
  when '--help'
    puts <<~HELP
      nix-cleanup [OPTIONS]
      #{'      '}
      --help, -h:
      show this help message and exit
      #{'      '}
      --yes, -y:
      don't ask for confirmation
      #{'      '}
      --dryrun, -d:
      perform all operations on paper
    HELP
    exit
  when '--yes'
    yes = true
  when '--dryrun'
    dryrun = true
  end
end

lb = 7
cmds = []
# home manager
if `home-manager generations | wc -l`.to_i >= lb
  gens = `home-manager generations`.split("\n").map { |el| el.split(' ')[4] }[5..-1].join(' ')
end

cmds.append("home-manager remove-generations #{gens} #{dryrun == true ? '--dryrun' : ''}") unless gens.nil?

# nix
if `nix-env --list-generations | wc -l`.to_i >= lb
  cmds.append("nix-env --delete-generations +5 #{dryrun == true ? '--dryrun' : ''}")
end

cmds.append('nix-collect-garbage') # always collect garbage

puts 'these commands will be run'
puts cmds
unless yes == true
  puts 'do you confirm'
  begin
    ans = gets.chomp
  rescue Interrupt
    puts "\nRude much"
    exit 1
  end
end

if ans == 'y' || yes == true
  cmds.each do |cmd|
    puts "executing #{cmd}"
    system cmd
  end
else
  exit 1
end
