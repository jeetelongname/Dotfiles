#!/usr/bin/env bash

## This is where i have all of my keybinds

# if you have a super key you will be much happier with Mod set to Mod4
#Mod=Mod1    # Use alt as the main modifier
Mod=Mod4 ; Alt=Mod1 # Uses Super (Windows) key for the main modifier with alt as.. well the alt key

#Basic Keybinds
hc keybind $Mod-Shift-q quit # the session (it logs you out)
hc keybind $Mod-Shift-r reload # the config
hc keybind $Mod-Shift-c close # a window

# basic movement
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
# ^ these use the arrow keys \/ these use the vim keys 
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
# ^ these use the arrow keys \/ these use the vim keys 
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# splitting frames
hc keybind $Mod-y split left 0.5
hc keybind $Mod-u split bottom  0.5
hc keybind $Mod-i split top 0.5
hc keybind $Mod-o split right   0.5
# create an empty frame at the specified direction (move ya vim keys up and you have your split commands)

# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames
resizestep=0.05
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
# vim chads ^ virgin arrow keys \/
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# Program Bindngs
hc keybind $Mod-Return spawn ${TERMINAL:-xterm} # use your $TERMINAL with xterm as fallback

hc keybind $Mod-d spawn rofi -show drun # Uses Dmenu for my run launcher
hc keybind $Mod-w spawn rofi -show window
hc keybind $Mod-Shift-e spawn emoji-inserter # this is a script i riped from Luke Smith 
hc keybind $Mod-e spawn $GUIEDITOR # incase emacs is ever ripped from my cold dead hands
hc keybind $Mod-i spawn $BROWSER 
# hc keybind $Mod-f spawn $FILEMANAGER # set a varable in your .profile and you will be fine

# layouting
hc keybind $Mod-r remove # empty frames (or space if you have not kept up with the terms)
hc keybind $Mod-s floating toggle # makes your windows float
hc keybind $Mod-f fullscreen toggle # b-tec f11 (useful if you use a terminal)
hc keybind $Mod-p pseudotile toggle # this is ment to help but it just makes the window smaller?

# mouse 
hc mouseunbind --all
hc mousebind $Mod-Button1 move # You can only use this when floating (it will only make your window clip back in regular mode)
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize # same thing but makeing your window bigger

# tags
tag_names=( {1..9} ) # this is a list of numbers 1 to 9 (thats what the .. means)
tag_icons=( "www","dev"{3..9} )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in ${!tag_names[@]} ; do # this iterates through the tag list and adds a keybinding for them (this save typing out "hc keybind $Mod-1 use_index 1" 8 more times) 
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done


# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 grid vertical max \
               , cycle_layout +1
# focus
hc keybind $Mod-BackSpace   cycle_monitor 
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent
